// <auto-generated />
using System;
using FallstudieSem5;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FallstudieSem5.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210319114946_FallstudieSem5.Models.Context")]
    partial class FallstudieSem5ModelsContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FallstudieSem5.Models.Address", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("StreetId")
                        .HasColumnType("bigint");

                    b.HasKey("AddressId");

                    b.HasIndex("StreetId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FallstudieSem5.Models.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("FallstudieSem5.Models.DangerLevel", b =>
                {
                    b.Property<long>("DangerLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("DangerLevelId");

                    b.ToTable("DangerLevel");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Hazard", b =>
                {
                    b.Property<long>("HazardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DangerLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HazardId");

                    b.HasIndex("DangerLevelId");

                    b.ToTable("Hazard");
                });

            modelBuilder.Entity("FallstudieSem5.Models.HouseNumber", b =>
                {
                    b.Property<long>("HouseNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HouseNumberID");

                    b.ToTable("HouseNumber");
                });

            modelBuilder.Entity("FallstudieSem5.Models.ObjectOwner", b =>
                {
                    b.Property<long>("ObjectOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ObjectOwnerId");

                    b.HasIndex("PersonId");

                    b.ToTable("ObjectOwner");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Person", b =>
                {
                    b.Property<long>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long?>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("TitleId")
                        .HasColumnType("bigint");

                    b.HasKey("PersonId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ObjectId");

                    b.HasIndex("TitleId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("FallstudieSem5.Models.PropertyOwner", b =>
                {
                    b.Property<long>("PropertyOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PropertyOwnerId");

                    b.HasIndex("PersonId");

                    b.ToTable("PropertyOwner");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Staff", b =>
                {
                    b.Property<long>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.HasKey("StaffId");

                    b.HasIndex("PersonId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Street", b =>
                {
                    b.Property<long>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("HouseNumberID")
                        .HasColumnType("bigint");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StreetId");

                    b.HasIndex("CityId");

                    b.HasIndex("HouseNumberID");

                    b.ToTable("Street");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Title", b =>
                {
                    b.Property<long>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TitleId");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("FallstudieSem5.Object", b =>
                {
                    b.Property<long>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripton")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ObjectId");

                    b.HasIndex("AddressId");

                    b.ToTable("Object");
                });

            modelBuilder.Entity("HazardObject", b =>
                {
                    b.Property<long>("HazardsHazardId")
                        .HasColumnType("bigint");

                    b.Property<long>("ObjectsObjectId")
                        .HasColumnType("bigint");

                    b.HasKey("HazardsHazardId", "ObjectsObjectId");

                    b.HasIndex("ObjectsObjectId");

                    b.ToTable("HazardObject");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Address", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Street", "Street")
                        .WithMany("Addresses")
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Street");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Hazard", b =>
                {
                    b.HasOne("FallstudieSem5.Models.DangerLevel", "DangerLevel")
                        .WithMany("Hazards")
                        .HasForeignKey("DangerLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangerLevel");
                });

            modelBuilder.Entity("FallstudieSem5.Models.ObjectOwner", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Person", "Person")
                        .WithMany("ObjectOwners")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Person", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Address", null)
                        .WithMany("Persons")
                        .HasForeignKey("AddressId");

                    b.HasOne("FallstudieSem5.Object", "Object")
                        .WithMany("Persons")
                        .HasForeignKey("ObjectId");

                    b.HasOne("FallstudieSem5.Models.Title", "Title")
                        .WithMany("Persons")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("FallstudieSem5.Models.PropertyOwner", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Person", "Person")
                        .WithMany("PropertyOwners")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Staff", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Person", "Person")
                        .WithMany("Staffs")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Street", b =>
                {
                    b.HasOne("FallstudieSem5.Models.City", "City")
                        .WithMany("Streets")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FallstudieSem5.Models.HouseNumber", "HouseNumber")
                        .WithMany("Streets")
                        .HasForeignKey("HouseNumberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("HouseNumber");
                });

            modelBuilder.Entity("FallstudieSem5.Object", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Address", "Address")
                        .WithMany("Objects")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("HazardObject", b =>
                {
                    b.HasOne("FallstudieSem5.Models.Hazard", null)
                        .WithMany()
                        .HasForeignKey("HazardsHazardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FallstudieSem5.Object", null)
                        .WithMany()
                        .HasForeignKey("ObjectsObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FallstudieSem5.Models.Address", b =>
                {
                    b.Navigation("Objects");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("FallstudieSem5.Models.City", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("FallstudieSem5.Models.DangerLevel", b =>
                {
                    b.Navigation("Hazards");
                });

            modelBuilder.Entity("FallstudieSem5.Models.HouseNumber", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Person", b =>
                {
                    b.Navigation("ObjectOwners");

                    b.Navigation("PropertyOwners");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Street", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("FallstudieSem5.Models.Title", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("FallstudieSem5.Object", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
